import MapAlgo
adj = {(1,2):[(2,2)],(2,2):[(2,1),(2,3)],(2,1):[(3,1)],(2,3):[(3,3)],(3,1):[(3,2)],(3,3):[(3,2)]
       ,(3,2):[(4,2)],(4,2):[(4,3)],(4,3):[(4,4),(5,3)],(5,3):[(5,4)],(5,4):[(5,5)],(4,4):[(3,4)]
    ,(3,4):[(3,5)],(3,5):[(4,5)],(4,5):[(5,5)]}#checked, compared to onenote diagram seems fine
old_adj = {(1,2):[(2,2)],(2,2):[(2,1),(2,3),(1,2)],(2,1):[(3,1),(2,2)],(2,3):[(2,2),(3,3)],(3,1):[(2,1),(3,2)],(3,3):[(2,3),(3,2)]
       ,(3,2):[(3,1),(3,3),(4,2)],(4,2):[(3,2),(4,3)],(4,3):[(4,2),(4,4),(5,3)],(5,3):[(4,3),(5,4)],(5,4):[(5,3),(5,5)],(4,4):[(4,3),(3,4)]
    ,(3,4):[(4,4),(3,5)],(3,5):[(3,4),(4,5)],(4,5):[(3,5),(5,5)]}#checked, compared to onenote diagram seems fine
cost = {((1,2),(2,2)):2,((2,2),(2,1)):1,((2,1),(3,1)):4,((3,1),(3,2)):5,((3,2),(4,2)):7,((4,2),(4,3)):1,((4,3),(5,3)):3,((5,3),(5,4)):2,((5,4),(5,5)):4
,((2,2),(2,3)):2,((2,3),(3,3)):3,((3,3),(3,2)):2,((4,3),(4,4)):2,((4,4),(3,4)):4,((3,4),(3,5)):5,((3,5),(4,5)):3,((4,5),(5,5)):3}#checked seems to be fine

# cost = MapAlgo.make_undirected(cost)
s, t = (1,2), (5,5)#start and stop
predecessors, min_cost = MapAlgo.dijkstra(adj, cost, s, t)
c = t
path = [c]
print 'min cost:', min_cost
while predecessors.get(c):
    path.insert(0, predecessors[c])
    c = predecessors[c]

print 'shortest path:', path
#print cost